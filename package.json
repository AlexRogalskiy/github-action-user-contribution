{
    "name": "github-action-user-contribution",
    "version": "0.0.0-next-2021911214737",
    "description": "Automatically generates GitHub user contribution charts by provided parameters",
    "main": "dist/index.js",
    "license": "GPL-3.0",
    "private": true,
    "scripts": {
        "authors": "git shortlog -s | cut -c8- | sort -f > AUTHORS",
        "nodemon": "nodemon --exec \"npm run dev\"",
        "start:action": "npm run build && node dist/index.js",
        "dev": "env-cmd --silent -e dev npm run start:action",
        "format": "prettier --config .prettierrc.yaml --ignore-unknown --loglevel warn --single-quote --write ${npm_package_config_prettierTarget}",
        "format:md": "remark-preset-davidtheclark --format",
        "format:check": "prettier --config .prettierrc.yaml --ignore-unknown --loglevel warn --check ${npm_package_config_prettierTarget}",
        "format:list": "prettier --config .prettierrc.yaml --list-different ${npm_package_config_prettierTarget}",
        "bundlesize:check": "bundlesize --config bundlesize.config.json",
        "lint": "eslint --config ./.eslintrc.js --format './node_modules/eslint-friendly-formatter/index.js' --report-unused-disable-directives --color --cache --fix --quiet --max-warnings=100 --cache-location ./node_modules/.cache/ --format codeframe --ext js,ts .",
        "lint:md": "remark-preset-davidtheclark",
        "lint:markdown": "markdownlint --config .markdownlint.yml '**/*.md'",
        "lint:clean": "del-cli .eslintcache",
        "lint:editorconfig": "editorconfig-checker",
        "lint:json": "jsonlint ./package.json --quiet",
        "lint:dts": "dtslint typings",
        "lint:docker": "dockerfile_lint -r default_rules.yaml",
        "lint:staged": "lint-staged --no-stash --allow-empty",
        "lint:license": "license-check-and-add check -f license-check-config.json",
        "lint:license:fix": "license-check-and-add add -f license-check-config.json -r",
        "pretty": "pretty-quick --staged --pattern '!test/tests/lint/**'",
        "license": "license-checker --json > licenses.json",
        "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s -r 0",
        "markdown": "markdown-link-check ./README.md ./SECURITY.md",
        "remark": "remark -q -f .",
        "glow": "glow --watch",
        "changeset": "changeset",
        "textlint": "textlint docs",
        "lint:lit": "lit-analyzer \"**/src/**/*.ts\" --format markdown --outFile result.md",
        "version:next": "changeset version --snapshot next",
        "release:next": "changeset publish --tag next",
        "git:diff": "git --no-pager diff --exit-code --stat HEAD",
        "git:log": "git log -1 --format='format:%H' HEAD",
        "git:ls": "git cat-file -p HEAD && git ls-tree -r HEAD",
        "git:clean": "git stash && git clean -fdX",
        "monitor": "monika -c monika.yml",
        "docs": "typedoc",
        "docs:mdd": "typedoc --plugin typedoc-plugin-markdown",
        "docs:md": "md-magic --path '**/*.md' --ignore 'node_modules' --config ./markdown.config.js",
        "compodocs": "compodoc -p tsconfig.doc.json -d docs",
        "compodocs:serve": "compodoc -p tsconfig.doc.json -d docs -s",
        "codecov": "codecov",
        "sonar": "node sonar-project.config.js",
        "semantic-release": "semantic-release",
        "commit": "git-cz",
        "release-minor": "release-it minor --ci --git.commit --git.push --git.tag --git.tagName='v${version}' --github.release --no-git.requireCleanWorkingDir --no-git.requireUpstream --npm.publish",
        "release-minor-without-tag": "release-it minor --ci --no-git.commit --no-git.push --no-git.tag --no-git.tagName='v${version}' --no-git.requireCleanWorkingDir --no-git.requireUpstream --no-github.release --npm.publish",
        "release": "release-it --ci --git.commit --git.push --git.tag --git.tagName='v${version}' --github.release --no-git.requireCleanWorkingDir --no-git.requireUpstream --npm.publish",
        "release-without-tag": "release-it --ci --no-git.commit --no-git.push --no-git.tag --no-git.tagName='v${version}' --no-github.release --no-git.requireCleanWorkingDir --no-git.requireUpstream --npm.publish",
        "release-dry-run": "release-it minor --dry-run --ci --no-git.commit --no-git.push --no-git.tag --no-git.tagName='v${version}' --no-git.requireCleanWorkingDir --no-git.requireUpstream --no-github.release --no-npm.publish",
        "postpublish": "npm run clean",
        "clean": "del-cli --dot=true dist coverage",
        "precommit": "npm run lint:staged",
        "postinstall": "[ -f node_modules/.bin/husky ] && husky install || echo no husky installed.",
        "prebuild": "npm run clean",
        "analyze": "source-map-explorer 'dist/index.js' --json",
        "build": "ncc build src/index.ts --source-map -m -o dist",
        "package": "ncc build src/index.ts --source-map --license licenses.txt",
        "reinstall": "del-cli --dot=true ./node_modules ./package-lock.json ./yarn.lock",
        "open:release": "open \"$(node -e 'console.log(`${require(\"./package.json\").repository}/releases`)')\"",
        "version": "git add -A dist",
        "postversion": "git push && git push --tags",
        "postversion:release": "git push --set-upstream ${GIT_REMOTE:-origin} release/v$npm_package_version",
        "version:new": "yarn version --no-git-tag-version",
        "version-checkout": "cat package.json | jq '.version' -r | xargs printf \"release/v%s\" | xargs git checkout -b",
        "version-commit": "cat package.json | jq '.version' -r | xargs printf \"release v%s\" | git commit --no-edit -s -F -",
        "version-update": "npm run version-checkout && git add package.json && npm run version-commit",
        "test:folio": "env-cmd --silent -e test folio tests/spec/",
        "jest-html": "env-cmd --silent -e test jest-html",
        "install-if-package-changed": "git diff-tree -r --name-only --no-commit-id HEAD | grep --quiet package-lock.json && npm install || exit 0",
        "test:ci:coverage": "env-cmd --silent -e ci npm test  -- --coverage --ci --testResultsProcessor=\"jest-sonar-reporter\" --watchAll=false",
        "test:coverage": "env-cmd --silent -e test jest --forceExit --runInBand --collectCoverage --detectOpenHandles --coverage && coveralls < ./coverage/lcov.info",
        "test:watch": "env-cmd --silent -e test jest --watch --notify --notifyMode=change",
        "test:debug": "./node_modules/.bin/node-debug -p 8082 ./node_modules/.bin/jest -i --watch",
        "test": "env-cmd --silent -e test jest --verbose --maxWorkers=50% --passWithNoTests --no-cache --detectOpenHandles --testPathIgnorePatterns integration local-integration disconnection",
        "test:integration": "env-cmd --silent -e test jest --runInBand --testPathIgnorePatterns disconnection --detectOpenHandles --verbose true",
        "test:local": "env-cmd --silent -e test jest --runInBand --verbose true --detectOpenHandles local-integration",
        "test:reporter": "env-cmd --silent -e test jest --ci --reporters='default' --reporters='./jest/json-reporter'",
        "test:disconnect": "env-cmd --silent -e test jest --runInBand --verbose true --detectOpenHandles disconnection",
        "test:license": "license-checker --production --summary --unknown --onlyAllow=\"Apache-2.0;BSD;ISC;MIT;UNLICENSED;\"",
        "lint:all": "npm run lint:clean && npm run lint && npm run remark && npm run lint:json && npm run lint:docker && npm run pretty",
        "format:all": "npm run format && npm run format:md",
        "check:all": "npm run format:check",
        "test:all": "npm run test && npm run test:folio && npm run test:license",
        "all": "npm run format:all && npm run lint:all && npm run build"
    },
    "dependencies": {
        "@actions/core": "^1.4.0",
        "cheerio": "^1.0.0-rc.9",
        "env-cmd": "^10.1.0",
        "lodash": "^4.17.20",
        "node-fetch": "2.6.1"
    },
    "devDependencies": {
        "@changesets/cli": "^2.16.0",
        "@compodoc/compodoc": "^1.1.15",
        "@hyperjumptech/monika": "^1.6.8",
        "@semantic-release/changelog": "^5.0.1",
        "@semantic-release/commit-analyzer": "^8.0.1",
        "@semantic-release/git": "^9.0.0",
        "@semantic-release/github": "^7.2.3",
        "@semantic-release/npm": "^7.1.3",
        "@semantic-release/release-notes-generator": "^9.0.2",
        "@theowenyoung/remark-lint-no-dead-urls": "^1.1.0",
        "@types/cheerio": "0.22.29",
        "@types/jest": "^26.0.23",
        "@types/lodash.mergewith": "^4.6.6",
        "@types/node": "^15.12.2",
        "@types/node-fetch": "2.5.10",
        "@types/prettier": "^2.2.3",
        "@typescript-eslint/eslint-plugin": "^4.26.1",
        "@typescript-eslint/parser": "^4.26.1",
        "@typescript-eslint/typescript-estree": "^4.26.1",
        "@vercel/ncc": "~0.28.6",
        "await-sleep": "^0.0.1",
        "boxen": "^5.0.1",
        "codecov": "^3.8.2",
        "conventional-changelog-cli": "^2.1.1",
        "coveralls": "^3.1.0",
        "cz-conventional-changelog": "^3.3.0",
        "dateformat": "^4.5.1",
        "decamelize": "^5.0.0",
        "del-cli": "^4.0.1",
        "dictionary-en": "^3.1.0",
        "dockerfile_lint": "0.3.4",
        "dtslint": "^4.1.6",
        "editorconfig-checker": "4.0.2",
        "eslint": "^7.28.0",
        "eslint-config-prettier": "^8.3.0",
        "eslint-friendly-formatter": "^4.0.1",
        "eslint-import-resolver-typescript": "^2.4.0",
        "eslint-plugin-cypress": "^2.11.3",
        "eslint-plugin-eslint-comments": "^3.2.0",
        "eslint-plugin-github": "^4.1.3",
        "eslint-plugin-import": "^2.23.4",
        "eslint-plugin-import-helpers": "^1.1.0",
        "eslint-plugin-jest": "^24.3.6",
        "eslint-plugin-node": "11.1.0",
        "eslint-plugin-prettier": "^3.4.0",
        "eslint-plugin-spellcheck": "0.0.17",
        "eslint-plugin-tsdoc": "^0.2.14",
        "eslint-plugin-unicorn": "^33.0.1",
        "expect": "^27.0.2",
        "folio": "^0.3.18",
        "git-cz": "^4.1.0",
        "glow": "^1.2.2",
        "husky": "^5.0.8",
        "jest": "^27.0.5",
        "jest-circus": "^27.0.5",
        "jest-environment-node-debug": "^2.0.0",
        "jest-extended": "^0.11.5",
        "jest-fetch-mock": "^3.0.3",
        "jest-html": "^1.5.0",
        "jest-junit": "^12.2.0",
        "jest-sonar-reporter": "^2.0.0",
        "jest-watch-select-projects": "^2.0.0",
        "jest-watch-typeahead": "^0.6.4",
        "joi": "^17.4.0",
        "jsonlint": "^1.6.3",
        "license-check-and-add": "^4.0.3",
        "license-checker": "^25.0.1",
        "lint-staged": "^12.3.7",
        "lit-analyzer": "^1.2.1",
        "loglevel": "^1.8.0",
        "markdown-link-check": "^3.8.6",
        "markdown-magic": "^2.5.2",
        "markdownlint-cli": "^0.27.1",
        "mockdate": "^3.0.5",
        "moment": "^2.29.1",
        "node-debug": "^0.1.0",
        "nodemon": "^2.0.9",
        "prettier": "^2.1.2",
        "pretty-quick": "^3.1.0",
        "rehype-autolink-headings": "^5.1.0",
        "release-it": "^14.10.0",
        "remark-cli": "^9.0.0",
        "remark-comment-config": "^6.0.0",
        "remark-frontmatter": "^3.0.0",
        "remark-gfm": "^1.0.0",
        "remark-github": "^10.1.0",
        "remark-html": "^13.0.1",
        "remark-lint": "^7.0.1",
        "remark-lint-fenced-code-flag": "^3.1.1",
        "remark-lint-no-html": "^2.0.1",
        "remark-lint-no-shell-dollars": "^3.1.1",
        "remark-preset-davidtheclark": "^0.12.0",
        "remark-preset-lint-markdown-style-guide": "^3.0.1",
        "remark-preset-lint-recommended": "^4.0.1",
        "remark-preset-wooorm": "^8.0.0",
        "remark-retext": "^4.0.0",
        "remark-stringify": "^10.0.2",
        "remark-toc": "^7.2.0",
        "remark-validate-links": "^10.0.2",
        "retext-diacritics": "^3.0.0",
        "retext-emoji": "^7.0.1",
        "retext-english": "^3.0.4",
        "retext-indefinite-article": "^2.0.1",
        "retext-redundant-acronyms": "^3.0.0",
        "retext-sentence-spacing": "^4.0.0",
        "retext-spell": "^4.0.0",
        "retext-syntax-mentions": "^2.1.1",
        "retext-syntax-urls": "^2.0.0",
        "semantic-release": ">=17.2.3",
        "sonarqube-scanner": "^2.8.1",
        "source-map-explorer": "^2.5.2",
        "textlint": "^12.1.0",
        "textlint-rule-common-misspellings": "^1.0.1",
        "textlint-rule-terminology": "^2.1.5",
        "ts-jest": "^27.0.3",
        "ts-node": "^10.0.0",
        "typedoc": "^0.22.10",
        "typedoc-plugin-markdown": "^3.11.14",
        "typescript": "^4.3.2",
        "unified": "^9.2.1"
    },
    "jestSonar": {
        "reportPath": "reports",
        "reportFile": "test-report.xml",
        "indent": 4
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/AlexRogalskiy/github-action-user-contribution.git"
    },
    "publishConfig": {
        "access": "public"
    },
    "engines": {
        "node": ">= 8.0.0"
    },
    "keywords": [
        "github-actions",
        "file size",
        "javascript"
    ],
    "maintainers": [
        {
            "name": "Alexander Rogalskiy",
            "email": "hi@nullables.io"
        }
    ],
    "contributors": [
        {
            "name": "Alexander Rogalskiy",
            "email": "hi@nullables.io"
        }
    ],
    "release": {
        "tagFormat": "v${version}",
        "plugins": [
            "@semantic-release/release-notes-generator",
            [
                "@semantic-release/npm",
                {
                    "npmPublish": false,
                    "tarballDir": "dist",
                    "allowSameVersion": true
                }
            ],
            [
                "@semantic-release/github",
                {
                    "assets": "dist/*.tgz"
                }
            ]
        ]
    },
    "husky": {
        "hooks": {
            "pre-commit": "npm run lint:staged && npm run all && npm run test:all",
            "pre-push": "npm run check:all",
            "post-checkout": "yarn install-if-package-changed",
            "post-merge": "npm run install-if-package-changed",
            "prepare-commit-msg": "git cz --hook --non-interactive --type=feat --subject=\"added new features\" || true"
        }
    },
    "bugs": {
        "url": "https://github.com/AlexRogalskiy/github-action-user-contribution/issues"
    },
    "homepage": "https://github.com/AlexRogalskiy/github-action-user-contribution",
    "author": {
        "name": "Alexander Rogalskiy",
        "url": "https://github.com/AlexRogalskiy"
    },
    "funding": "https://github.com/sponsors/AlexRogalskiy",
    "config": {
        "prettierTarget": "**/*.ts",
        "commitizen": {
            "path": "./node_modules/cz-conventional-changelog"
        }
    },
    "files": [
        "dist/**"
    ]
}
